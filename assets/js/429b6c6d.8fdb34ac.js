"use strict";(self.webpackChunkgotocva_blog=self.webpackChunkgotocva_blog||[]).push([[639],{3905:(t,e,r)=>{r.d(e,{Zo:()=>c,kt:()=>m});var a=r(7294);function n(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function o(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,a)}return r}function i(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?o(Object(r),!0).forEach((function(e){n(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function p(t,e){if(null==t)return{};var r,a,n=function(t,e){if(null==t)return{};var r,a,n={},o=Object.keys(t);for(a=0;a<o.length;a++)r=o[a],e.indexOf(r)>=0||(n[r]=t[r]);return n}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(a=0;a<o.length;a++)r=o[a],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(n[r]=t[r])}return n}var s=a.createContext({}),l=function(t){var e=a.useContext(s),r=e;return t&&(r="function"==typeof t?t(e):i(i({},e),t)),r},c=function(t){var e=l(t.components);return a.createElement(s.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},d=a.forwardRef((function(t,e){var r=t.components,n=t.mdxType,o=t.originalType,s=t.parentName,c=p(t,["components","mdxType","originalType","parentName"]),d=l(r),m=n,g=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return r?a.createElement(g,i(i({ref:e},c),{},{components:r})):a.createElement(g,i({ref:e},c))}));function m(t,e){var r=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var o=r.length,i=new Array(o);i[0]=d;var p={};for(var s in e)hasOwnProperty.call(e,s)&&(p[s]=e[s]);p.originalType=t,p.mdxType="string"==typeof t?t:n,i[1]=p;for(var l=2;l<o;l++)i[l]=r[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},246:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>p,toc:()=>l});var a=r(7462),n=(r(7294),r(3905));const o={slug:"operators-in-javascript",title:"Operators in javascript",authors:{name:"Sivabharathy",title:"Sparkout tech solutions",url:"https://github.com/gotocva",image_url:"https://github.com/gotocva.png"},tags:["nodejs","operators in nodejs"]},i=void 0,p={unversionedId:"nodejs-crash-course/operators-in-js",id:"nodejs-crash-course/operators-in-js",title:"Operators in javascript",description:"There are different types of JavaScript operators:",source:"@site/docs/nodejs-crash-course/03.operators-in-js.mdx",sourceDirName:"nodejs-crash-course",slug:"/nodejs-crash-course/operators-in-javascript",permalink:"/docs/nodejs-crash-course/operators-in-javascript",draft:!1,tags:[{label:"nodejs",permalink:"/docs/tags/nodejs"},{label:"operators in nodejs",permalink:"/docs/tags/operators-in-nodejs"}],version:"current",sidebarPosition:3,frontMatter:{slug:"operators-in-javascript",title:"Operators in javascript",authors:{name:"Sivabharathy",title:"Sparkout tech solutions",url:"https://github.com/gotocva",image_url:"https://github.com/gotocva.png"},tags:["nodejs","operators in nodejs"]},sidebar:"tutorialSidebar",previous:{title:"var, let, and const in javaScript",permalink:"/docs/nodejs-crash-course/nodejs-var-let-const"}},s={},l=[],c={toc:l};function u(t){let{components:e,...r}=t;return(0,n.kt)("wrapper",(0,a.Z)({},c,r,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"There are different types of JavaScript operators:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Arithmetic Operators"),(0,n.kt)("li",{parentName:"ul"},"Assignment Operators"),(0,n.kt)("li",{parentName:"ul"},"Comparison Operators"),(0,n.kt)("li",{parentName:"ul"},"Logical Operators"),(0,n.kt)("li",{parentName:"ul"},"Conditional Operators"),(0,n.kt)("li",{parentName:"ul"},"Type Operators")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"center"},"Operator"),(0,n.kt)("th",{parentName:"tr",align:"center"},"Definition"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"+"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Addition")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"-"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Subtraction")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"*"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Multiplication")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"**"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Exponentiation (ES2016)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"/"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Division")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"%"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Modulus (Division Remainder)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"++"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Increment")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"--"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Decrement")))),(0,n.kt)("p",null,"The assignment operator (=) assigns a value to a variable."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"let input = 10;  // assign value 10 into variable input\n")),(0,n.kt)("p",null,"Assign values to variables and add them together:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"let inputOne = 10;                      // assign the value 10 to inputOne\nlet inputTwo = 25;                      // assign the value 25 to inputTwo\nlet output = inputOne + inputTwo;       // assign the value 35 to output (10 + 25)\n")))}u.isMDXComponent=!0}}]);