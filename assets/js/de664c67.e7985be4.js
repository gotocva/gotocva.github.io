"use strict";(self.webpackChunkgotocva_blog=self.webpackChunkgotocva_blog||[]).push([[306],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var i=o.createContext({}),l=function(e){var t=o.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=l(e.components);return o.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=l(r),f=n,b=d["".concat(i,".").concat(f)]||d[f]||u[f]||a;return r?o.createElement(b,s(s({ref:t},p),{},{components:r})):o.createElement(b,s({ref:t},p))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,s=new Array(a);s[0]=d;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:n,s[1]=c;for(var l=2;l<a;l++)s[l]=r[l];return o.createElement.apply(null,s)}return o.createElement.apply(null,r)}d.displayName="MDXCreateElement"},255:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var o=r(7462),n=(r(7294),r(3905));const a={slug:"nodejs-best-practices",title:"Nodejs Best practices",authors:["gotocva"],tags:["nodejs","javascript","Nodejs Best practices"],keywords:["nodejs","javascript","Nodejs Best practices"],hide_table_of_contents:!1},s=void 0,c={permalink:"/blog/nodejs-best-practices",source:"@site/blog/nodejs/nodejs-best-practices.md",title:"Nodejs Best practices",description:"* ### Prefer const over let. Ditch the var",date:"2022-11-01T07:26:16.000Z",formattedDate:"November 1, 2022",tags:[{label:"nodejs",permalink:"/blog/tags/nodejs"},{label:"javascript",permalink:"/blog/tags/javascript"},{label:"Nodejs Best practices",permalink:"/blog/tags/nodejs-best-practices"}],readingTime:3.26,hasTruncateMarker:!0,authors:[{name:"Sivabharathy",title:"Technical Architect at Sparkout tech solutions",url:"https://github.com/gotocva",imageURL:"https://github.com/gotocva.png",key:"gotocva"}],frontMatter:{slug:"nodejs-best-practices",title:"Nodejs Best practices",authors:["gotocva"],tags:["nodejs","javascript","Nodejs Best practices"],keywords:["nodejs","javascript","Nodejs Best practices"],hide_table_of_contents:!1},nextItem:{title:"Basics of computers",permalink:"/blog/basics-of-computers"}},i={authorsImageUrls:[void 0]},l=[],p={toc:l};function u(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,o.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("h3",{parentName:"li",id:"prefer-const-over-let-ditch-the-var"},"Prefer const over let. Ditch the var"))),(0,n.kt)("p",null,"Using const means that once a variable is assigned, it cannot be reassigned. Preferring const will help you to not be tempted to use the same variable for different uses, and make your code clearer. If a variable needs to be reassigned, in a for loop, for example, use let to declare it. Another important aspect of let is that a variable declared using it is only available in the block scope in which it was defined. var is function scoped, not block-scoped, and shouldn't be used in ES6 now that you have const and let at your disposal"))}u.isMDXComponent=!0}}]);