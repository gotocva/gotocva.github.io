<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://gotocva.github.io/blog</id>
    <title>Sivabharathy | gotocva.github.io | gotocva tech blog Blog</title>
    <updated>2022-10-29T06:34:26.295Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://gotocva.github.io/blog"/>
    <subtitle>Sivabharathy | gotocva.github.io | gotocva tech blog Blog</subtitle>
    <icon>https://gotocva.github.io/img/favicon.png</icon>
    <entry>
        <title type="html"><![CDATA[Basics of computers]]></title>
        <id>basics-of-computers</id>
        <link href="https://gotocva.github.io/blog/basics-of-computers"/>
        <updated>2022-10-29T06:34:26.295Z</updated>
        <summary type="html"><![CDATA[Computer is a device that transforms data into meaningful information. It processes the input according to the set of instructions provided to it by the user and gives the desired output quickly. A Computer can perform the following set of functions:]]></summary>
        <content type="html"><![CDATA[<p>Computer is a device that transforms data into meaningful information. It processes the input according to the set of instructions provided to it by the user and gives the desired output quickly. A Computer can perform the following set of functions:</p><ul><li>Accept data</li><li>Store data</li><li>Process data as desired</li><li>Retrieve the stored data as and when required</li><li>Print the result in desired format.</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="data-and-information">Data and Information<a class="hash-link" href="#data-and-information" title="Direct link to heading">​</a></h3><p>It is the term used for raw facts and figures fed into the computer and along with the set of instructions which enables the computer to convert this raw data into the refined and useful information. Information: Data represented in useful and meaningful form is information. Classification of Computers: Computers can be classified based on the technology being used and the way they are designed to perform the various tasks. Computers can be categorized into Digital, Analog and Hybrid based on their design and working:</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="digital-computers">Digital Computers<a class="hash-link" href="#digital-computers" title="Direct link to heading">​</a></h3><p>These are the modern computers which are capable of processing information in discrete form. In digital technology data which can be in the form of letters, symbols or numbers is represented in binary form i.e. 0s and 1s. The digital computers are used in industrial, business and scientific applications. They are quite suitable for large volume data processing.</p><ul><li>Analog Computers
These computers are used to process data generated by ongoing physical processes. A thermometer is an example of an analog computer since it measures the change in mercury level continuously. Analog computers are well suited to simulating systems. A simulator helps to conduct experiments repeatedly in real time environment. Some of the common examples are simulations in aircrafts, nuclear power plants, hydraulic and electronic networks.</li><li>Hybrid Computers
These use both analog and digital technology. It has the speed of analog computer and the accuracy of a digital computer. It may accept digital or analog signals but an extensive conversion of data from digital to analog and analog to digital has to be done. Hybrid Computers are used as a cost effective means for complex simulations.</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="classification-of-digital-computers">Classification of Digital Computers<a class="hash-link" href="#classification-of-digital-computers" title="Direct link to heading">​</a></h3><ul><li>Micro Computers
These are also known as Personal Computers. These type of digital computer uses a microprocessor (a CPU on a single chip) and include both desktops and laptops. These computers can work on small volume of data, are very versatile and can handle variety of applications. These computers are being used as work stations, CAD, multimedia and advertising applications. Example: portable computers such as PDAs (Personal Digital Assistants) and tablets</li><li>Mini Computers
These computers can support multiple users working simultaneously on the same machine. These are mainly used in an organization where computers installed in various departments are interconnected. These computers are useful for small business organizations.</li><li>Main Frames
These computers are large and very powerful computers with very high memory capacity. These can process huge databases such as census at extremely fast rate. They are suitable for big organizations, banks, industries etc. and can support hundreds of users simultaneously on the network.</li><li>Super Computers
These are fastest and very expensive computers. They can execute billions of instructions per second. These are multiprocessor, parallel systems suitable for specialized complex scientific applications involving huge amounts of mathematical applications such as weather forecasting.</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="peripheral-devices">Peripheral Devices<a class="hash-link" href="#peripheral-devices" title="Direct link to heading">​</a></h3><p>These devices are used for performing the specific functions and are connected to the computer externally. These peripheral devices enable the computer to operate according to the user requirements by feeding data in and out of the computer. Peripheral devices are as follows:</p><ul><li>Keyboard</li><li>Mouse</li><li>Light Pen</li><li>Optical/magnetic Scanner</li><li>Touch Screen</li><li>Microphone for voice as input</li><li>Track Ball</li><li>Monitor (Visual Display Unit)</li><li>Printers</li><li>Plotter</li><li>Speakers</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="difference-between-ram-and-hard-disk">Difference between RAM and Hard-disk<a class="hash-link" href="#difference-between-ram-and-hard-disk" title="Direct link to heading">​</a></h3><table><thead><tr><th align="center">RAM</th><th align="center">Hard Disk</th></tr></thead><tbody><tr><td align="center">RAM is an electronic device</td><td align="center">Hard-disk is an electromechanical device</td></tr><tr><td align="center">Electronic device are faster in speed</td><td align="center">Electro-mechanical device has speed slower than Electronic device.</td></tr><tr><td align="center">CPU is an electronic device,so it’s speed can match with RAM.Therefore,CPU and RAM have connections and that connections is known as buses</td><td align="center">Hard disk is an electro-mechanical device.Therefore,it’s speed cannot be match by CPU and hence there is no connection between hard-disk and CPU.</td></tr></tbody></table><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Note : CPU process the data, and to process that data we need fast speed memory which is known as RAM.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="types-of-software">Types of Software<a class="hash-link" href="#types-of-software" title="Direct link to heading">​</a></h3><ul><li>System Software : These are those software,without which our PC,laptop won’t run, i.e it is must for a device to be operating. For Example: Linux,Unix,Windows,etc.</li><li>Application Software : These are those software,without which our PC,laptop can run, i.e these software are not necessary for a device to be operating. For Example: Facebook,What’s App,Games.</li></ul>]]></content>
        <author>
            <name>Sivabharathy</name>
            <uri>https://github.com/gotocva</uri>
        </author>
        <category label="basics" term="basics"/>
        <category label="computer" term="computer"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Data structures in JS]]></title>
        <id>js-data-structures</id>
        <link href="https://gotocva.github.io/blog/js-data-structures"/>
        <updated>2022-10-28T09:58:51.000Z</updated>
        <summary type="html"><![CDATA[What is a data structure ?]]></summary>
        <content type="html"><![CDATA[<h3 class="anchor anchorWithStickyNavbar_LWe7" id="what-is-a-data-structure-">What is a data structure ?<a class="hash-link" href="#what-is-a-data-structure-" title="Direct link to heading">​</a></h3><p>In software engineering, a data structure is an organisation to coordinate, oversee and store data in a way that permits proficient access and change.</p><p><img loading="lazy" src="https://gotocva.github.io/img/banners/banner-01.png" alt="banner image" class="img_ev3q">
All the more exactly, a data structure is an assortment of data esteems, the connections among them, and the capabilities or tasks that can be applied to that data.</p><p>These definitions could sound a piece theoretical from the start, yet consider it. In the event that you've been coding for a brief period, you probably utilised data structures previously.</p><p>Have you utilised exhibits and items? Those are data structures. Every one of them are an assortment of values that connect with one another, and can be worked on by you.</p><p>JavaScript has crude (worked in) and non-crude (not implicit) data structures.</p><p>Crude data structures drop of course with the programming language and you can carry out them out of the crate (like exhibits and articles). Non-crude data structures don't stop as a matter of course and you need to code them up to utilize them.</p><p>Various data structures exist since some of them are more qualified for particular sort of tasks. You can likely handle most programming errands with worked in data structures, however for a few unmistakable undertakings a non-crude data structure might prove to be useful.</p><p>Presently we should go through the most famous data structures out there, and perceive how every one of them functions, in what events they're valuable, and the way in which we can code them up in JavaScript.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-arrays">1. Arrays<a class="hash-link" href="#1-arrays" title="Direct link to heading">​</a></h3><p>An array is an assortment of things put away at bordering memory areas.</p><p>Every thing can be gotten to through its list (position) number. Arrays generally start at file 0, so in an array of 4 components we could get to the third component utilizing the list number 2.</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> students </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'siva'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'chan'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'ruban'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'geetha'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">students</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token comment" style="color:#999988;font-style:italic">// ruban</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The length property of an array is characterized as the quantity of components it contains. In the event that the array contains 4 components, we can say the array has a length of 4.</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> students </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'siva'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'chan'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'ruban'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'geetha'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">students</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">length</span><span class="token punctuation" style="color:#393A34">)</span><span class="token comment" style="color:#999988;font-style:italic">//4</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>In some programming dialects, the client can store upsides of a similar sort in one array and the length of the array must be characterized right now of its creation and can't be changed subsequently.</p><p>In JavaScript that is not the situation, as we can store upsides of any kind in a similar array and its length can be dynamic (it can develop or recoil as much as required).</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> users </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'siva'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">27</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'chan'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">28</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'ruban'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">25</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'geetha'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">26</span><span class="token punctuation" style="color:#393A34">]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Any data type can be put away in an array, and that incorporates arrays as well. An array that includes different arrays inside itself is known as a multi-layered array.</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> arr </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'siva'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'chan'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'ruban'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'geetha'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">27</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">28</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">25</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">26</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>In JavaScript, arrays accompany many underlying properties and techniques we can use with various purposes, for example, adding or erasing things from the array, arranging it, sifting its qualities, know its, length, etc. You can track down a full rundown of array techniques here.</p><p>As I referenced, in arrays, every component has a record characterized by its situation in the array. At the point when we add another thing toward the finish of the array, it simply takes the file number that follows the past last thing in the array.</p><p>However, when we add/erase another thing toward the start or the center of the array, the lists of the relative multitude of components that come after the component added/erased must be changed. This obviously has a computational expense, and is one of the shortcomings of this data structure.</p><p>Arrays are helpful when we need to store individual qualities and add/erase values from the finish of the data structure. In any case, when we want to add/erase from any piece of it, there are different data structures that perform all the more effectively (we'll discuss them later on).</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-objects">2. Objects<a class="hash-link" href="#2-objects" title="Direct link to heading">​</a></h3><p>In JavaScript, an object is a collection of key-value pairs. This data structure is also called map, dictionary or hash-table in other programming languages.</p><p>A run of the mill JS object seems to be this:</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> obj </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">prop1</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"I'm"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">prop2</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"an"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">prop3</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"object"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>We utilize wavy supports to announce the object. Then, at that point, pronounce each critical followed by a colon, and the relating esteem.</p><p>Something critical to specify is that each key includes to be exceptional inside the object. You can't have two keys with a similar name.</p><p>Objects can store the two qualities and capabilities. While discussing objects, values are called properties, and capabilities are called techniques.</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> obj </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">prop1</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Hi!"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">prop3</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">capability</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"I'm a property buddy!"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>To get to properties you can utilize two unique punctuations, either object.property or object<!-- -->["property"]<!-- -->. To get to strategies we call object.method().</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">obj</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">prop1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token comment" style="color:#999988;font-style:italic">//"Hi!"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">obj</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"prop1"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token comment" style="color:#999988;font-style:italic">//"Hi!"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">obj</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">prop3</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token comment" style="color:#999988;font-style:italic">//"I'm a property man!"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The linguistic structure to allocate new qualities is very comparable:</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">obj</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">prop4</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">125</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">obj</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"prop5"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"The new prop on the block"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">obj</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method-variable function-variable method function property-access" style="color:#d73a49">prop6</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"yet another model"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">obj</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">prop4</span><span class="token punctuation" style="color:#393A34">)</span><span class="token comment" style="color:#999988;font-style:italic">//125</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">obj</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"prop5"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token comment" style="color:#999988;font-style:italic">//"The new prop on the block"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">obj</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">prop6</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token comment" style="color:#999988;font-style:italic">//"one more model"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Like clusters, in JavaScript objects accompany many implicit strategies that permit us to perform various tasks and get data from a given object. A full rundown can be viewed as here.</p><p>Objects are an effective method for gathering data that share something practically speaking or are some way or another related. Likewise, because of the way that property names are remarkable, objects prove to be useful when we need to isolate data in light of a novel condition.</p><p>A model could be counting the number of individuals that like various food sources:</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> obj </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">pizzaLovers</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1000</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">pastaLovers</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">750</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">argentinianAsadoLovers</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">12312312312313123</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>Sivabharathy</name>
            <uri>https://github.com/gotocva</uri>
        </author>
        <category label="javascript" term="javascript"/>
        <category label="arrays" term="arrays"/>
        <category label="data structures" term="data structures"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[HTTP Status codes]]></title>
        <id>http-status-codes</id>
        <link href="https://gotocva.github.io/blog/http-status-codes"/>
        <updated>2022-10-28T09:58:51.000Z</updated>
        <summary type="html"><![CDATA[A short description of this page]]></summary>
        <content type="html"><![CDATA[<p>HTTP response status codes indicate whether a specific HTTP request has been successfully completed. Responses are grouped in five classes:</p><ul><li>Informational responses (1XX)</li><li>Successful responses (2XX)</li><li>Redirections (3XX)</li><li>Client errors (4XX)</li><li>Server errors (5XX)</li></ul><p>a) Informational responses: Status codes under this category indicate whether the request was received and understood.</p><p>The following list below shows informational responses.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">100: Continue</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">101: Switching Protocols</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">102: Processing</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">103: Early Hints</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>b) Successful responses: Status codes under this category indicate whether the request was successfully received, understood and accepted.</p><p>The following list below shows successful responses.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">200: OK</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">201: Created</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">202: Accepted</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">203: Non-Authoritative Information</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">204: No Content</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">205: Reset Content</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">206: Partial Content</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">207: Multi-Status</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">208: Already Reported</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">226: IM Used</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>c) Redirections: Status codes under this category indicate that further actions need to be taken to complete the request.</p><p>The following list below shows redirections.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">300: Multiple Choices</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">301: Moved Permanently</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">302: Found</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">303: See Other</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">304: Not Modified</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">305: Use Proxy</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">306: Switch Proxy</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">307: Temporary Redirect</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">308: Permanent Redirect</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>d) Client errors: Status codes under this category indicate errors caused by the client.</p><p>The following list below shows client errors.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">400: Bad request</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">401: Unauthorized</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">402: Payment required</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">403: Forbidden</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">404: Not found</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">405: Method not allowed</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">406: Not acceptable</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">410: Gone</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>e) Server errors: Status codes under this category indicate errors caused by the server.</p><p>The following list below shows server errors.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">500: Internal server error</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">501: Not implemented</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">502: Bad gateway</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">503: Service unavailable</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">504: Gateway timeout</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Reference : </p><p><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Status" target="_blank" rel="noopener noreferrer">https://developer.mozilla.org/en-US/docs/Web/HTTP/Status</a></p>]]></content>
        <author>
            <name>Sivabharathy</name>
            <uri>https://github.com/gotocva</uri>
        </author>
        <category label="http" term="http"/>
        <category label="http status codes" term="http status codes"/>
    </entry>
</feed>